# MySQL create script - autogenerated by ExSite::DBmap

# create all tables

CREATE TABLE IF NOT EXISTS member (
        member_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
        login varchar(20),
        password varchar(20),
        name varchar(80),
        email varchar(80),
        access int,
        section_id int NOT NULL
        );
CREATE TABLE IF NOT EXISTS section (
        title varchar(80),
        description varchar(255),
        type varchar(20),
        section_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
        parent_id int NOT NULL,
        publish_to varchar(255),
        url varchar(255),
        label varchar(40),
        template_id int NOT NULL,
        mtime timestamp,
        note varchar(255),
        ctime timestamp
        );
CREATE TABLE IF NOT EXISTS attribute (
        attribute_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
        name varchar(40),
        value text,
        tablename varchar(40),
        id int
        );
CREATE TABLE IF NOT EXISTS member_site_link (
        member_site_link_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
        section_id int NOT NULL,
        member_id int NOT NULL,
        priveleges varchar(255),
	INDEX(member_id),
	INDEX(section_id)
        );
CREATE TABLE IF NOT EXISTS page (
        page_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
        section_id int NOT NULL,
        parent_id int NOT NULL,
        template_id int NOT NULL,
        title varchar(255),
        filename varchar(80),
        description text,
        keywords varchar(255),
        label varchar(80),
        rank int,
        type varchar(20),
        status varchar(20),
        access varchar(20),
        publish_method varchar(20),
        visibility varchar(20),
        version varchar(40),
        mtime timestamp,
        ctime timestamp,
	INDEX(section_id,filename)
        );
CREATE TABLE IF NOT EXISTS service (
        service_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
        name varchar(80),
        section_id int NOT NULL,
        page_id int NOT NULL,
        options text,
        mtime timestamp,
	INDEX(section_id)
        );
CREATE TABLE IF NOT EXISTS searchurl (
        searchurl_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
        url varchar(100),
        section_id int NOT NULL,
        title varchar(100),
        description text,
        privacy varchar(20),
        ctime timestamp,
	INDEX(section_id)
        );
CREATE TABLE IF NOT EXISTS content_data (
        content_data_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
        content_id int NOT NULL,
        mime_type varchar(40),
        data text,
        fdata mediumtext,
        attributes varchar(200),
        thumb text,
        thumb_attributes varchar(200),
        file varchar(100),
        url varchar(100),
        ctime timestamp,
        ptime timestamp,
        note text,
	INDEX(content_id)
        );
CREATE TABLE IF NOT EXISTS content (
        content_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
        name varchar(255),
        description text,
        type varchar(20),
        allow_mime varchar(255),
        page_id int NOT NULL,
        mtime timestamp,
        ctime timestamp,
	INDEX(page_id,name)
        );
CREATE TABLE IF NOT EXISTS searchterm (
        searchterm_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
        term varchar(80),
        searchurl_id int NOT NULL,
        weight int,
	INDEX(term)
        );
CREATE TABLE IF NOT EXISTS trash (
        trash_id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
        ctime timestamp,
        description varchar(80),
        member_id int NOT NULL,
        data mediumtext
        );


# WARNING: you must change the login id and password 

INSERT INTO member (login,password,name,email,access) VALUES ("EXSITE_LOGIN","EXSITE_PASSWORD","EXSITE_NAME","EXSITE_EMAIL",3);
